@{
    string Title = Model.WithoutSettings.String(BlogKeys.Title);
    string PageTitle = (string.IsNullOrWhiteSpace(Title) ? string.Empty : Title + " - ") + Context.String(BlogKeys.Title);
    string Self = Context.GetLink(Model);
    if(Self == "/_Tags.cshtml"){
        Self = "/tags";
    }
}
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>@PageTitle</title>
        <link rel="stylesheet" href="@Context.GetLink("/assets/sass/main.css")" />
        <link rel="stylesheet" href="@Context.GetLink("/assets/css/highlight.css")" />
        <link rel="stylesheet" href="https://cdn.rawgit.com/konpa/devicon/df6431e323547add1b4cf45992913f15286456d3/devicon.min.css">
    </head>
    <body>
        <nav>
        <h1><a href="@Context.GetLink("/")">@Context.String(BlogKeys.Title)</a></h1>

        @if(Context.String(BlogKeys.Intro) != null)
        {            
            @if(Context.String(BlogKeys.Description) != null)
            {
                <hr>
            }
            <span>@Context.String(BlogKeys.Intro)</span>
        }

        <ul>
        @{
            List<Tuple<string, string>> pages = Context
                .Documents[Blog.Pages]
                .Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
                .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
                .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
                .Where(x => !string.IsNullOrEmpty(x.Item1))
                .OrderBy(x => x.Item1)
                .ToList();
            if(Documents[Blog.Tags].Any())
            {
                pages.Insert(0, Tuple.Create("Tags", Context.GetLink("tags/index.html")));
            }
            if(Documents[Blog.BlogPosts].Any() && Context.Bool(BlogKeys.GenerateArchive))
            {
                pages.Insert(0, Tuple.Create("Archive", Context.GetLink(Context.String(BlogKeys.PostsPath) + "/index.html")));
            }
            foreach(var (title, url) in pages)
            {
                if(url==Self)
                {
                <li ><a href="@url" class="selected">@title</a></li>
                }
                else{
                <li><a href="@url">@title</a></li>
                }
            }
        }
        </ul>
        </nav>

        <main>
        <div class="shadow"></div>
        @RenderBody()
        </main>

        <script src="@Context.GetLink("/assets/js/highlight.pack.js")"></script>   
        <script>hljs.initHighlightingOnLoad();</script>
    </body>
</html>

